@import "vars";

@function px-to-rem($px) {
  @return calc($px / 16) * 1rem;
}

// q: what does the above function do?
// a: it converts pixels to rems

@mixin mobile() {
    @media (max-width: $mobile-width) {
        @content;
    }
}

@mixin tablet() {
    @media (min-width: $mobile-width) and (max-width: $tablet-width) {
        @content;
    }
}

@mixin desktop() {
    @media (min-width: $tablet-width) and (max-width: $desktop-width) {
        @content;
    }
}

@mixin hi-res-tablet() {
    @media (min-width: $tablet-width) and (max-width: $hi-res-tablet-width) {
        @content;
    }
}

// if i just typescript to get the resolution of the screen
// and then use that to determine what class is should apply 
//? to the container element
@mixin tablet-landscape() {
    @media (min-width: $tablet-width) and 
        (max-width: $table-landscape-width) and (orientation: landscape) {
        @content;
    }
}

@mixin mobile-landscape() {
    @media (max-width: $mobile-width) and (orientation: landscape) {
        @content;
    }
}

@mixin landscape() {
    @media (orientation: landscape) {
        @content;
    }
}

@mixin portrait() {
    @media (orientation: portrait) {
        @content;
    }
}

@mixin size($w, $h) {
    width: px-to-rem($w);
    height: px-to-rem($h);
}
@mixin flex() {
    display: flex;
}

@mixin pull-right() {
    margin-left: auto;
}

@mixin pull-left() {
    margin-right: auto;
}

@mixin font-family($font) {
    font-family: $font;
}
@mixin flex-center() {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin flex-direction($direction) {
    flex-direction: $direction;
}

@mixin letter-spacing($spacing) {
    letter-spacing: $spacing;
}

@mixin font-color($color) {
    color: $color;
}

@mixin font-size($size) {
    font-size: px-to-rem($size);
}

@mixin line-height($height) {
    line-height: $height;
}

@mixin font-weight($weight) {
    font-weight: $weight;
}

@mixin text-transform($transform) {
    text-transform: $transform;
}

@mixin v-padding($padding) {
    padding: $padding 0;
}

@mixin h-padding($padding) {
    padding: 0 $padding;
}
